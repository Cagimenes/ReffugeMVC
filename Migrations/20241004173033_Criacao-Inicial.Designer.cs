// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReffugeMVC.Models;

#nullable disable

namespace ReffugeMVC.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20241004173033_Criacao-Inicial")]
    partial class CriacaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReffugeMVC.Models.Agendamento", b =>
                {
                    b.Property<int>("AgendamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AgendamentoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgendamentoId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataHora");

                    b.Property<int>("ProfissionalId")
                        .HasColumnType("int");

                    b.HasKey("AgendamentoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("ReffugeMVC.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClienteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("ClienteEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmailCliente");

                    b.Property<string>("CpfCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CpfCliente");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeCliente");

                    b.Property<int>("PlanosId")
                        .HasColumnType("int");

                    b.Property<string>("SenhaCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SenhaCliente");

                    b.Property<string>("TelefoneCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TelefoneCliente");

                    b.HasKey("ClienteId");

                    b.HasIndex("PlanosId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ReffugeMVC.Models.Conteudo", b =>
                {
                    b.Property<int>("ConteudoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ConteudoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConteudoId"));

                    b.Property<string>("NomeConteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeConteudo");

                    b.Property<int>("TipoConteudoId")
                        .HasColumnType("int");

                    b.HasKey("ConteudoId");

                    b.HasIndex("TipoConteudoId");

                    b.ToTable("Conteudo");
                });

            modelBuilder.Entity("ReffugeMVC.Models.Diario", b =>
                {
                    b.Property<int>("DiarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DiarioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiarioId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("ConteudoDiario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ConteudoDiario");

                    b.Property<DateTime>("DataHorario")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataHorario");

                    b.HasKey("DiarioId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Diario");
                });

            modelBuilder.Entity("ReffugeMVC.Models.DuracaoSono", b =>
                {
                    b.Property<int>("DuracaoSonoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DuracaoSonoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DuracaoSonoId"));

                    b.Property<string>("NomeDuracaoSono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeDuracaoSono");

                    b.HasKey("DuracaoSonoId");

                    b.ToTable("DuracaoSono");
                });

            modelBuilder.Entity("ReffugeMVC.Models.Exercicios", b =>
                {
                    b.Property<int>("ExerciciosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExerciciosId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciciosId"));

                    b.Property<string>("NomeExercicios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeExercicios");

                    b.Property<int>("TipoExerciciosId")
                        .HasColumnType("int");

                    b.HasKey("ExerciciosId");

                    b.HasIndex("TipoExerciciosId");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("ReffugeMVC.Models.Planos", b =>
                {
                    b.Property<int>("PlanosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PlanosId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanosId"));

                    b.Property<string>("DescricaoPlanos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DescricaoPlanos");

                    b.Property<string>("DuracaoPlanos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DuracaoPlanos");

                    b.Property<string>("NomePlanos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomePlanos");

                    b.Property<decimal>("PrecoPlanos")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PrecoPlanos");

                    b.HasKey("PlanosId");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("ReffugeMVC.Models.Profissional", b =>
                {
                    b.Property<int>("ProfissionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProfissionalId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfissionalId"));

                    b.Property<string>("DescricaoProfissional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DescricaoProfissional");

                    b.Property<string>("NomeProfissional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeProfissional");

                    b.Property<int>("TipoEspecializacaoId")
                        .HasColumnType("int");

                    b.HasKey("ProfissionalId");

                    b.HasIndex("TipoEspecializacaoId");

                    b.ToTable("Profissional");
                });

            modelBuilder.Entity("ReffugeMVC.Models.TermometroEmocional", b =>
                {
                    b.Property<int>("TermometroEmocionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TermometroEmocionalId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TermometroEmocionalId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2")
                        .HasColumnName("Data");

                    b.Property<int>("TipoEmocaoId")
                        .HasColumnType("int");

                    b.HasKey("TermometroEmocionalId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoEmocaoId");

                    b.ToTable("TermometroEmocional");
                });

            modelBuilder.Entity("ReffugeMVC.Models.TermometroNoturno", b =>
                {
                    b.Property<int>("TermometroNoturnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TermometroNoturnoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TermometroNoturnoId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2")
                        .HasColumnName("Data");

                    b.Property<int>("DuracaoSonoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoSentimentoSonoId")
                        .HasColumnType("int");

                    b.Property<int>("VezesAcordou")
                        .HasColumnType("int")
                        .HasColumnName("VezesAcordou");

                    b.HasKey("TermometroNoturnoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DuracaoSonoId");

                    b.HasIndex("TipoSentimentoSonoId");

                    b.ToTable("TermometroNoturno");
                });

            modelBuilder.Entity("ReffugeMVC.Models.TipoConteudo", b =>
                {
                    b.Property<int>("TipoConteudoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoConteudoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoConteudoId"));

                    b.Property<string>("NomeTipoConteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeTipoConteudo");

                    b.HasKey("TipoConteudoId");

                    b.ToTable("TipoConteudo");
                });

            modelBuilder.Entity("ReffugeMVC.Models.TipoEmocao", b =>
                {
                    b.Property<int>("TipoEmocaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoEmocaoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoEmocaoId"));

                    b.Property<string>("NomeTipoEmocao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeTipoEmocao");

                    b.HasKey("TipoEmocaoId");

                    b.ToTable("TipoEmocao");
                });

            modelBuilder.Entity("ReffugeMVC.Models.TipoEspecializacao", b =>
                {
                    b.Property<int>("TipoEspecializacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoEspecializacaoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoEspecializacaoId"));

                    b.Property<string>("NomeTipoEspecializacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeTipoEspecializacao");

                    b.HasKey("TipoEspecializacaoId");

                    b.ToTable("TipoEspecializacao");
                });

            modelBuilder.Entity("ReffugeMVC.Models.TipoExercicios", b =>
                {
                    b.Property<int>("TipoExerciciosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoExerciciosId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoExerciciosId"));

                    b.Property<string>("NomeTipoExercicios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeTipoExercicios");

                    b.HasKey("TipoExerciciosId");

                    b.ToTable("TipoExercicios");
                });

            modelBuilder.Entity("ReffugeMVC.Models.TipoSentimentoSono", b =>
                {
                    b.Property<int>("TipoSentimentoSonoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoSentimentoSonoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoSentimentoSonoId"));

                    b.Property<string>("NomeTipoSentimentoSono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeTipoSentimentoSono");

                    b.HasKey("TipoSentimentoSonoId");

                    b.ToTable("TipoSentimentoSono");
                });

            modelBuilder.Entity("ReffugeMVC.Models.Agendamento", b =>
                {
                    b.HasOne("ReffugeMVC.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReffugeMVC.Models.Profissional", "Profissional")
                        .WithMany()
                        .HasForeignKey("ProfissionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Profissional");
                });

            modelBuilder.Entity("ReffugeMVC.Models.Cliente", b =>
                {
                    b.HasOne("ReffugeMVC.Models.Planos", "Planos")
                        .WithMany()
                        .HasForeignKey("PlanosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planos");
                });

            modelBuilder.Entity("ReffugeMVC.Models.Conteudo", b =>
                {
                    b.HasOne("ReffugeMVC.Models.TipoConteudo", "TipoConteudo")
                        .WithMany()
                        .HasForeignKey("TipoConteudoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoConteudo");
                });

            modelBuilder.Entity("ReffugeMVC.Models.Diario", b =>
                {
                    b.HasOne("ReffugeMVC.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ReffugeMVC.Models.Exercicios", b =>
                {
                    b.HasOne("ReffugeMVC.Models.TipoExercicios", "TipoExercicios")
                        .WithMany()
                        .HasForeignKey("TipoExerciciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoExercicios");
                });

            modelBuilder.Entity("ReffugeMVC.Models.Profissional", b =>
                {
                    b.HasOne("ReffugeMVC.Models.TipoEspecializacao", "TipoEspecializacao")
                        .WithMany()
                        .HasForeignKey("TipoEspecializacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoEspecializacao");
                });

            modelBuilder.Entity("ReffugeMVC.Models.TermometroEmocional", b =>
                {
                    b.HasOne("ReffugeMVC.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReffugeMVC.Models.TipoEmocao", "TipoEmocao")
                        .WithMany()
                        .HasForeignKey("TipoEmocaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoEmocao");
                });

            modelBuilder.Entity("ReffugeMVC.Models.TermometroNoturno", b =>
                {
                    b.HasOne("ReffugeMVC.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReffugeMVC.Models.DuracaoSono", "DuracaoSono")
                        .WithMany()
                        .HasForeignKey("DuracaoSonoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReffugeMVC.Models.TipoSentimentoSono", "TipoSentimentoSono")
                        .WithMany()
                        .HasForeignKey("TipoSentimentoSonoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("DuracaoSono");

                    b.Navigation("TipoSentimentoSono");
                });
#pragma warning restore 612, 618
        }
    }
}
